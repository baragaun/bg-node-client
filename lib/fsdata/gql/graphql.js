export var AdminTaskResult;
(function (AdminTaskResult) {
    AdminTaskResult["Error"] = "error";
    AdminTaskResult["Ok"] = "ok";
})(AdminTaskResult || (AdminTaskResult = {}));
export var AdminTaskType;
(function (AdminTaskType) {
    AdminTaskType["AddAppFeature"] = "addAppFeature";
    AdminTaskType["AddLanguageText"] = "addLanguageText";
    AdminTaskType["AddOrRemoveAppFeature"] = "addOrRemoveAppFeature";
    AdminTaskType["ClearBusMessages"] = "clearBusMessages";
    AdminTaskType["CompareMm2Object"] = "compareMm2Object";
    AdminTaskType["CompareMm2ObjectIdsOfModel"] = "compareMm2ObjectIdsOfModel";
    AdminTaskType["CreateAnalyticsSynchronization"] = "createAnalyticsSynchronization";
    AdminTaskType["CreateApiAuthInfo"] = "createApiAuthInfo";
    AdminTaskType["DecryptString"] = "decryptString";
    AdminTaskType["DeleteUser"] = "deleteUser";
    AdminTaskType["DoDataMaintenance"] = "doDataMaintenance";
    AdminTaskType["FixAllSyncedChannelInvitationInitialMessages"] = "fixAllSyncedChannelInvitationInitialMessages";
    AdminTaskType["FormatPhoneNumbers"] = "formatPhoneNumbers";
    AdminTaskType["ImportMarketplaceData"] = "importMarketplaceData";
    AdminTaskType["LoadDbCache"] = "loadDbCache";
    AdminTaskType["MergeAllDuplicateMm3ChatObjects"] = "mergeAllDuplicateMm3ChatObjects";
    AdminTaskType["MergeAllDuplicateMm3Users"] = "mergeAllDuplicateMm3Users";
    AdminTaskType["MergeUsers"] = "mergeUsers";
    AdminTaskType["PauseAnalyticsSynchronization"] = "pauseAnalyticsSynchronization";
    AdminTaskType["PauseMm2Synchronization"] = "pauseMm2Synchronization";
    AdminTaskType["QueryDbVersion"] = "queryDbVersion";
    AdminTaskType["RecreateDbIndexes"] = "recreateDbIndexes";
    AdminTaskType["RecreateDefaultMatchingEngine"] = "recreateDefaultMatchingEngine";
    AdminTaskType["RefreshAllEmbeddedCompanies"] = "refreshAllEmbeddedCompanies";
    AdminTaskType["RefreshAllMatchProfiles"] = "refreshAllMatchProfiles";
    AdminTaskType["RefreshAllUserInboxes"] = "refreshAllUserInboxes";
    AdminTaskType["RemoveAllInvalidUserBlocks"] = "removeAllInvalidUserBlocks";
    AdminTaskType["RemoveAppFeature"] = "removeAppFeature";
    AdminTaskType["RemoveBusMessage"] = "removeBusMessage";
    AdminTaskType["ResetUserPassword"] = "resetUserPassword";
    AdminTaskType["RunAnalyticsSynchronization"] = "runAnalyticsSynchronization";
    AdminTaskType["RunDataGenerator"] = "runDataGenerator";
    AdminTaskType["RunMm2Synchronization"] = "runMm2Synchronization";
    AdminTaskType["SendPendingTrackingEvents"] = "sendPendingTrackingEvents";
    AdminTaskType["SendPushNotification"] = "sendPushNotification";
    AdminTaskType["SetTrainingTags"] = "setTrainingTags";
    AdminTaskType["SetUserPassword"] = "setUserPassword";
    AdminTaskType["SuspendUser"] = "suspendUser";
    AdminTaskType["SyncAllUsersWhoSignedUpInMm3"] = "syncAllUsersWhoSignedUpInMm3";
    AdminTaskType["SyncDocsWithoutMm2Ids"] = "syncDocsWithoutMm2Ids";
    AdminTaskType["SyncUsersWithLanguageMismatch"] = "syncUsersWithLanguageMismatch";
    AdminTaskType["TriggerRandomSynchronizations"] = "triggerRandomSynchronizations";
    AdminTaskType["Unset"] = "unset";
    AdminTaskType["UpdateChannelMetadata"] = "updateChannelMetadata";
    AdminTaskType["UpdateChannelOtherUserId"] = "updateChannelOtherUserId";
    AdminTaskType["UpdateGroupIdentsInAllGroupMemberships"] = "updateGroupIdentsInAllGroupMemberships";
    AdminTaskType["VerifyUserPassword"] = "verifyUserPassword";
})(AdminTaskType || (AdminTaskType = {}));
export var AppAction;
(function (AppAction) {
    AppAction["EditProfile"] = "editProfile";
    AppAction["Unset"] = "unset";
    AppAction["UpdateApp"] = "updateApp";
})(AppAction || (AppAction = {}));
export var AppFeature;
(function (AppFeature) {
    AppFeature["TestFeatures1"] = "testFeatures1";
    AppFeature["TestFeatures2"] = "testFeatures2";
})(AppFeature || (AppFeature = {}));
export var AssetHostingService;
(function (AssetHostingService) {
    AssetHostingService["S3"] = "s3";
    AssetHostingService["Unset"] = "unset";
})(AssetHostingService || (AssetHostingService = {}));
export var AuthType;
(function (AuthType) {
    AuthType["Hmac"] = "hmac";
    AuthType["None"] = "none";
    AuthType["Oauth"] = "oauth";
    AuthType["Saml"] = "saml";
    AuthType["Token"] = "token";
})(AuthType || (AuthType = {}));
export var BarcodeType;
(function (BarcodeType) {
    BarcodeType["Code_25"] = "CODE_25";
    BarcodeType["DataMatrix"] = "DATA_MATRIX";
    BarcodeType["Ean_8"] = "EAN_8";
    BarcodeType["Ean_13"] = "EAN_13";
    BarcodeType["I125"] = "I125";
    BarcodeType["Itf"] = "ITF";
    BarcodeType["Pdf417"] = "PDF417";
    BarcodeType["QrCode"] = "QR_CODE";
    BarcodeType["Type_39"] = "TYPE_39";
    BarcodeType["Type_128"] = "TYPE_128";
    BarcodeType["UpcA"] = "UPC_A";
    BarcodeType["UpcE"] = "UPC_E";
})(BarcodeType || (BarcodeType = {}));
export var ChannelChangedEventType;
(function (ChannelChangedEventType) {
    ChannelChangedEventType["ChannelDeleted"] = "channelDeleted";
    ChannelChangedEventType["ChannelUpdated"] = "channelUpdated";
    ChannelChangedEventType["InvitationAccepted"] = "invitationAccepted";
    ChannelChangedEventType["InvitationCreated"] = "invitationCreated";
    ChannelChangedEventType["InvitationDeclined"] = "invitationDeclined";
    ChannelChangedEventType["InvitationDeleted"] = "invitationDeleted";
    ChannelChangedEventType["InvitationUpdated"] = "invitationUpdated";
    ChannelChangedEventType["MessageCreated"] = "messageCreated";
    ChannelChangedEventType["MessageDeleted"] = "messageDeleted";
    ChannelChangedEventType["MessageStatusChanged"] = "messageStatusChanged";
    ChannelChangedEventType["MessageUpdated"] = "messageUpdated";
    ChannelChangedEventType["ParticipantCreated"] = "participantCreated";
    ChannelChangedEventType["ParticipantDeleted"] = "participantDeleted";
    ChannelChangedEventType["ParticipantUpdated"] = "participantUpdated";
})(ChannelChangedEventType || (ChannelChangedEventType = {}));
export var ChannelInvitationDirection;
(function (ChannelInvitationDirection) {
    ChannelInvitationDirection["Received"] = "received";
    ChannelInvitationDirection["Sent"] = "sent";
})(ChannelInvitationDirection || (ChannelInvitationDirection = {}));
export var ChannelInvitationStatus;
(function (ChannelInvitationStatus) {
    ChannelInvitationStatus["Accepted"] = "accepted";
    ChannelInvitationStatus["Created"] = "created";
    ChannelInvitationStatus["Declined"] = "declined";
    ChannelInvitationStatus["Unset"] = "unset";
})(ChannelInvitationStatus || (ChannelInvitationStatus = {}));
export var ChannelMessageEvent;
(function (ChannelMessageEvent) {
    ChannelMessageEvent["Received"] = "received";
    ChannelMessageEvent["Seen"] = "seen";
    ChannelMessageEvent["Unset"] = "unset";
})(ChannelMessageEvent || (ChannelMessageEvent = {}));
export var ChannelMessageType;
(function (ChannelMessageType) {
    ChannelMessageType["Invitation"] = "invitation";
    ChannelMessageType["Support"] = "support";
    ChannelMessageType["System"] = "system";
    ChannelMessageType["Unset"] = "unset";
    ChannelMessageType["Welcome"] = "welcome";
})(ChannelMessageType || (ChannelMessageType = {}));
export var ChannelParticipantRole;
(function (ChannelParticipantRole) {
    ChannelParticipantRole["Admin"] = "admin";
    ChannelParticipantRole["Moderator"] = "moderator";
    ChannelParticipantRole["Owner"] = "owner";
    ChannelParticipantRole["Unset"] = "unset";
})(ChannelParticipantRole || (ChannelParticipantRole = {}));
export var ChannelType;
(function (ChannelType) {
    ChannelType["Mentoring"] = "mentoring";
    ChannelType["Support"] = "support";
    ChannelType["Unset"] = "unset";
    ChannelType["Welcome"] = "welcome";
})(ChannelType || (ChannelType = {}));
export var CookieChoiceTextId;
(function (CookieChoiceTextId) {
    CookieChoiceTextId["AcceptAll"] = "acceptAll";
    CookieChoiceTextId["AcceptEssentials"] = "acceptEssentials";
    CookieChoiceTextId["RejectAll"] = "rejectAll";
})(CookieChoiceTextId || (CookieChoiceTextId = {}));
export var DeclineChannelInvitationReasonTextId;
(function (DeclineChannelInvitationReasonTextId) {
    DeclineChannelInvitationReasonTextId["FakeProfile"] = "fakeProfile";
    DeclineChannelInvitationReasonTextId["Inappropriate"] = "inappropriate";
    DeclineChannelInvitationReasonTextId["NoReason"] = "noReason";
    DeclineChannelInvitationReasonTextId["NotGoodFit"] = "notGoodFit";
    DeclineChannelInvitationReasonTextId["TooBusy"] = "tooBusy";
})(DeclineChannelInvitationReasonTextId || (DeclineChannelInvitationReasonTextId = {}));
export var ErrorCode;
(function (ErrorCode) {
    ErrorCode["AcademicExperienceNameMissing"] = "academicExperienceNameMissing";
    ErrorCode["AcademicExperienceUserIdMissing"] = "academicExperienceUserIdMissing";
    ErrorCode["AlreadyExists"] = "alreadyExists";
    ErrorCode["AlreadyGroupMember"] = "alreadyGroupMember";
    ErrorCode["AlreadyInitialized"] = "alreadyInitialized";
    ErrorCode["AssetUploadFailed"] = "assetUploadFailed";
    ErrorCode["AuthTokenNoMatch"] = "authTokenNoMatch";
    ErrorCode["BusinessExperienceNameMissing"] = "businessExperienceNameMissing";
    ErrorCode["BusinessExperienceUserIdMissing"] = "businessExperienceUserIdMissing";
    ErrorCode["CompanyNameMissing"] = "companyNameMissing";
    ErrorCode["CompanyNameTaken"] = "companyNameTaken";
    ErrorCode["ContentTagAlreadyExist"] = "contentTagAlreadyExist";
    ErrorCode["ContentTagModelTypeMissing"] = "contentTagModelTypeMissing";
    ErrorCode["ContentTagObjectIdMissing"] = "contentTagObjectIdMissing";
    ErrorCode["ContentTagTypeMissing"] = "contentTagTypeMissing";
    ErrorCode["CurrentPasswordIncorrect"] = "currentPasswordIncorrect";
    ErrorCode["CurrentPasswordMissing"] = "currentPasswordMissing";
    ErrorCode["DataValidationFailed"] = "dataValidationFailed";
    ErrorCode["DeviceUuidMissing"] = "deviceUuidMissing";
    ErrorCode["EmailInvalid"] = "emailInvalid";
    ErrorCode["EmailMissing"] = "emailMissing";
    ErrorCode["ExceedsLimit"] = "exceedsLimit";
    ErrorCode["ExpertiseBidirectionalMappingError"] = "expertiseBidirectionalMappingError";
    ErrorCode["ExpertiseTextIdDne"] = "expertiseTextIdDNE";
    ErrorCode["FailedToConnect"] = "failedToConnect";
    ErrorCode["FailedToCreateAccount"] = "failedToCreateAccount";
    ErrorCode["FailedToSignin"] = "failedToSignin";
    ErrorCode["FailedToUpdate"] = "failedToUpdate";
    ErrorCode["GroupLevelTooDeep"] = "groupLevelTooDeep";
    ErrorCode["GroupNameMissing"] = "groupNameMissing";
    ErrorCode["GroupNameTaken"] = "groupNameTaken";
    ErrorCode["GroupNotActive"] = "groupNotActive";
    ErrorCode["GroupRuleFailed"] = "groupRuleFailed";
    ErrorCode["GroupSlugMissing"] = "groupSlugMissing";
    ErrorCode["GroupSlugTaken"] = "groupSlugTaken";
    ErrorCode["InvalidInput"] = "invalidInput";
    ErrorCode["InvalidPushNotificationToken"] = "invalidPushNotificationToken";
    ErrorCode["MatchingEngineNameMissing"] = "matchingEngineNameMissing";
    ErrorCode["MatchingEngineNameTaken"] = "matchingEngineNameTaken";
    ErrorCode["NatsInvalidTrackId"] = "natsInvalidTrackId";
    ErrorCode["NoLiveWebsocketConnectionAvailable"] = "noLiveWebsocketConnectionAvailable";
    ErrorCode["NoNotificationMethodAvailable"] = "noNotificationMethodAvailable";
    ErrorCode["NotAGroupMember"] = "notAGroupMember";
    ErrorCode["NotAllowed"] = "notAllowed";
    ErrorCode["NotAvailable"] = "notAvailable";
    ErrorCode["NotFound"] = "notFound";
    ErrorCode["NotImplemented"] = "notImplemented";
    ErrorCode["NotInitialized"] = "notInitialized";
    ErrorCode["NotSupported"] = "notSupported";
    ErrorCode["ParentGroupNotFound"] = "parentGroupNotFound";
    ErrorCode["PasswordMissing"] = "passwordMissing";
    ErrorCode["PasswordNoMatch"] = "passwordNoMatch";
    ErrorCode["PhoneNumberInvalid"] = "phoneNumberInvalid";
    ErrorCode["PhoneNumberMissing"] = "phoneNumberMissing";
    ErrorCode["PhoneNumberNotSupported"] = "phoneNumberNotSupported";
    ErrorCode["ServiceNotAvailable"] = "serviceNotAvailable";
    ErrorCode["SystemError"] = "systemError";
    ErrorCode["Timeout"] = "timeout";
    ErrorCode["TooManyRequests"] = "tooManyRequests";
    ErrorCode["TrackingInvalidTrackId"] = "trackingInvalidTrackId";
    ErrorCode["TrainingCannotUpdateFields"] = "trainingCannotUpdateFields";
    ErrorCode["TrainingContentPageCannotUpdateFields"] = "trainingContentPageCannotUpdateFields";
    ErrorCode["TrainingContentPageMm2IdMissing"] = "trainingContentPageMm2IdMissing";
    ErrorCode["TrainingContentPageMm2IdTaken"] = "trainingContentPageMm2IdTaken";
    ErrorCode["TrainingMm2IdMissing"] = "trainingMm2IdMissing";
    ErrorCode["TrainingMm2IdTaken"] = "trainingMm2IdTaken";
    ErrorCode["TrainingSessionCannotUpdateFields"] = "trainingSessionCannotUpdateFields";
    ErrorCode["TrainingSessionMm2IdMissing"] = "trainingSessionMm2IdMissing";
    ErrorCode["TrainingSessionMm2IdTaken"] = "trainingSessionMm2IdTaken";
    ErrorCode["TrainingSessionProgressInvalid"] = "trainingSessionProgressInvalid";
    ErrorCode["TrainingSessionTrainingMissing"] = "trainingSessionTrainingMissing";
    ErrorCode["TrainingSessionUserIdMissing"] = "trainingSessionUserIdMissing";
    ErrorCode["Unauthorized"] = "unauthorized";
    ErrorCode["Unknown"] = "unknown";
    ErrorCode["UserAlreadyExists"] = "userAlreadyExists";
    ErrorCode["UserAnonymized"] = "userAnonymized";
    ErrorCode["UserDeviceNotFound"] = "userDeviceNotFound";
    ErrorCode["UserNotActive"] = "userNotActive";
    ErrorCode["UserNotFound"] = "userNotFound";
})(ErrorCode || (ErrorCode = {}));
export var FederatedIdentityProvider;
(function (FederatedIdentityProvider) {
    FederatedIdentityProvider["Firebase"] = "firebase";
    FederatedIdentityProvider["None"] = "none";
})(FederatedIdentityProvider || (FederatedIdentityProvider = {}));
export var GroupMembershipRole;
(function (GroupMembershipRole) {
    GroupMembershipRole["Admin"] = "admin";
    GroupMembershipRole["Coordinator"] = "coordinator";
    GroupMembershipRole["Moderator"] = "moderator";
    GroupMembershipRole["Owner"] = "owner";
})(GroupMembershipRole || (GroupMembershipRole = {}));
export var GroupRuleEventType;
(function (GroupRuleEventType) {
    GroupRuleEventType["EnterGroup"] = "enterGroup";
    GroupRuleEventType["ExitGroup"] = "exitGroup";
    GroupRuleEventType["SendMessage"] = "sendMessage";
    GroupRuleEventType["SignUp"] = "signUp";
    GroupRuleEventType["Unknown"] = "unknown";
    GroupRuleEventType["UpdateUser"] = "updateUser";
    GroupRuleEventType["UserSearch"] = "userSearch";
})(GroupRuleEventType || (GroupRuleEventType = {}));
export var IdentityProvider;
(function (IdentityProvider) {
    IdentityProvider["Apple"] = "apple";
    IdentityProvider["Facebook"] = "facebook";
    IdentityProvider["Google"] = "google";
    IdentityProvider["Instagram"] = "instagram";
    IdentityProvider["LinkedIn"] = "linkedIn";
    IdentityProvider["Microsoft"] = "microsoft";
    IdentityProvider["Own"] = "own";
    IdentityProvider["Sso"] = "sso";
    IdentityProvider["Telegram"] = "telegram";
    IdentityProvider["Twitter"] = "twitter";
    IdentityProvider["WhatsApp"] = "whatsApp";
})(IdentityProvider || (IdentityProvider = {}));
export var IncludeFilterOption;
(function (IncludeFilterOption) {
    IncludeFilterOption["Exclude"] = "exclude";
    IncludeFilterOption["Include"] = "include";
    IncludeFilterOption["Only"] = "only";
})(IncludeFilterOption || (IncludeFilterOption = {}));
export var MastercardCardType;
(function (MastercardCardType) {
    MastercardCardType["Credit"] = "credit";
    MastercardCardType["Debit"] = "debit";
    MastercardCardType["None"] = "none";
    MastercardCardType["NotProvided"] = "notProvided";
    MastercardCardType["Prepaid"] = "prepaid";
})(MastercardCardType || (MastercardCardType = {}));
export var ModelEventType;
(function (ModelEventType) {
    ModelEventType["Error"] = "error";
    ModelEventType["Info"] = "info";
    ModelEventType["Warning"] = "warning";
})(ModelEventType || (ModelEventType = {}));
export var ModelType;
(function (ModelType) {
    ModelType["AcademicExperience"] = "AcademicExperience";
    ModelType["AdminTask"] = "AdminTask";
    ModelType["AnalyticsServiceRecord"] = "AnalyticsServiceRecord";
    ModelType["AnalyticsSynchronization"] = "AnalyticsSynchronization";
    ModelType["ApiAuthInfo"] = "ApiAuthInfo";
    ModelType["AppliedGroupRule"] = "AppliedGroupRule";
    ModelType["Brand"] = "Brand";
    ModelType["BusinessExperience"] = "BusinessExperience";
    ModelType["Channel"] = "Channel";
    ModelType["ChannelInbox"] = "ChannelInbox";
    ModelType["ChannelInvitation"] = "ChannelInvitation";
    ModelType["ChannelMessage"] = "ChannelMessage";
    ModelType["ChannelParticipant"] = "ChannelParticipant";
    ModelType["Company"] = "Company";
    ModelType["Contact"] = "Contact";
    ModelType["ContentStatus"] = "ContentStatus";
    ModelType["ContentTag"] = "ContentTag";
    ModelType["DataDeletion"] = "DataDeletion";
    ModelType["GiftCardProduct"] = "GiftCardProduct";
    ModelType["Group"] = "Group";
    ModelType["GroupCms"] = "GroupCms";
    ModelType["GroupMembership"] = "GroupMembership";
    ModelType["GroupRule"] = "GroupRule";
    ModelType["GroupRuleConfig"] = "GroupRuleConfig";
    ModelType["MarketplaceServiceRecord"] = "MarketplaceServiceRecord";
    ModelType["MastercardBank"] = "MastercardBank";
    ModelType["Match"] = "Match";
    ModelType["MatchProfile"] = "MatchProfile";
    ModelType["MatchingEngine"] = "MatchingEngine";
    ModelType["MentorBoard"] = "MentorBoard";
    ModelType["MentoringSession"] = "MentoringSession";
    ModelType["Mm2Integration"] = "Mm2Integration";
    ModelType["Mm2Synchronization"] = "Mm2Synchronization";
    ModelType["Mm2SynchronizationResultItem"] = "Mm2SynchronizationResultItem";
    ModelType["ModerationConcern"] = "ModerationConcern";
    ModelType["MultiStepAction"] = "MultiStepAction";
    ModelType["MyUser"] = "MyUser";
    ModelType["NatsMessage"] = "NatsMessage";
    ModelType["Notification"] = "Notification";
    ModelType["NotificationTemplate"] = "NotificationTemplate";
    ModelType["Option"] = "Option";
    ModelType["Product"] = "Product";
    ModelType["ProductCategory"] = "ProductCategory";
    ModelType["PurchaseOrder"] = "PurchaseOrder";
    ModelType["PurchaseOrderItem"] = "PurchaseOrderItem";
    ModelType["ServiceRecord"] = "ServiceRecord";
    ModelType["ServiceRequest"] = "ServiceRequest";
    ModelType["ShoppingCart"] = "ShoppingCart";
    ModelType["ShoppingCartItem"] = "ShoppingCartItem";
    ModelType["SupportChannelConfig"] = "SupportChannelConfig";
    ModelType["TrackingEvent"] = "TrackingEvent";
    ModelType["Training"] = "Training";
    ModelType["TrainingContentPage"] = "TrainingContentPage";
    ModelType["TrainingSession"] = "TrainingSession";
    ModelType["UploadedAsset"] = "UploadedAsset";
    ModelType["User"] = "User";
    ModelType["UserDevice"] = "UserDevice";
    ModelType["UserInbox"] = "UserInbox";
    ModelType["UserMetadata"] = "UserMetadata";
    ModelType["UserPreferences"] = "UserPreferences";
    ModelType["UserSearch"] = "UserSearch";
    ModelType["UserTracking"] = "UserTracking";
    ModelType["Wallet"] = "Wallet";
    ModelType["WalletItem"] = "WalletItem";
    ModelType["WalletItemTransfer"] = "WalletItemTransfer";
    ModelType["WalletServiceRecord"] = "WalletServiceRecord";
    ModelType["Unset"] = "unset";
})(ModelType || (ModelType = {}));
export var ModerationConcernType;
(function (ModerationConcernType) {
    ModerationConcernType["Phrase"] = "phrase";
    ModerationConcernType["Unknown"] = "unknown";
})(ModerationConcernType || (ModerationConcernType = {}));
export var MultiStepActionResult;
(function (MultiStepActionResult) {
    MultiStepActionResult["ConfirmTokenMismatch"] = "confirmTokenMismatch";
    MultiStepActionResult["DataValidationFailed"] = "dataValidationFailed";
    MultiStepActionResult["DeviceNotFound"] = "deviceNotFound";
    MultiStepActionResult["EmailMismatch"] = "emailMismatch";
    MultiStepActionResult["EmailNotVerified"] = "emailNotVerified";
    MultiStepActionResult["Error"] = "error";
    MultiStepActionResult["Expired"] = "expired";
    MultiStepActionResult["InvalidEmail"] = "invalidEmail";
    MultiStepActionResult["MissingEmail"] = "missingEmail";
    MultiStepActionResult["MissingPhoneNumber"] = "missingPhoneNumber";
    MultiStepActionResult["NotFound"] = "notFound";
    MultiStepActionResult["Ok"] = "ok";
    MultiStepActionResult["Passed"] = "passed";
    MultiStepActionResult["PasswordMismatch"] = "passwordMismatch";
    MultiStepActionResult["PasswordUpdated"] = "passwordUpdated";
    MultiStepActionResult["PhoneNumberInvalid"] = "phoneNumberInvalid";
    MultiStepActionResult["PhoneNumberMismatch"] = "phoneNumberMismatch";
    MultiStepActionResult["PhoneNumberNotVerified"] = "phoneNumberNotVerified";
    MultiStepActionResult["SystemError"] = "systemError";
    MultiStepActionResult["Unset"] = "unset";
    MultiStepActionResult["UserFailedValidation"] = "userFailedValidation";
    MultiStepActionResult["UserNotFound"] = "userNotFound";
    MultiStepActionResult["UserNotSignedIn"] = "userNotSignedIn";
})(MultiStepActionResult || (MultiStepActionResult = {}));
export var MultiStepActionSendNotificationResult;
(function (MultiStepActionSendNotificationResult) {
    MultiStepActionSendNotificationResult["Failed"] = "failed";
    MultiStepActionSendNotificationResult["Ok"] = "ok";
    MultiStepActionSendNotificationResult["PhoneNumberInvalid"] = "phoneNumberInvalid";
})(MultiStepActionSendNotificationResult || (MultiStepActionSendNotificationResult = {}));
export var MultiStepActionStatus;
(function (MultiStepActionStatus) {
    MultiStepActionStatus["Created"] = "created";
    MultiStepActionStatus["Finished"] = "finished";
    MultiStepActionStatus["Started"] = "started";
})(MultiStepActionStatus || (MultiStepActionStatus = {}));
export var MultiStepActionType;
(function (MultiStepActionType) {
    MultiStepActionType["ResetPassword"] = "resetPassword";
    MultiStepActionType["TokenSignIn"] = "tokenSignIn";
    MultiStepActionType["Unset"] = "unset";
    MultiStepActionType["UpdateEmail"] = "updateEmail";
    MultiStepActionType["UpdatePassword"] = "updatePassword";
    MultiStepActionType["UpdatePhoneNumber"] = "updatePhoneNumber";
    MultiStepActionType["VerifyEmail"] = "verifyEmail";
    MultiStepActionType["VerifyEmailOnSignUp"] = "verifyEmailOnSignUp";
    MultiStepActionType["VerifyPhoneNumber"] = "verifyPhoneNumber";
    MultiStepActionType["VerifyPhoneNumberOnSignUp"] = "verifyPhoneNumberOnSignUp";
})(MultiStepActionType || (MultiStepActionType = {}));
export var NotificationMethod;
(function (NotificationMethod) {
    NotificationMethod["Auto"] = "auto";
    NotificationMethod["Email"] = "email";
    NotificationMethod["InAppNotification"] = "inAppNotification";
    NotificationMethod["Off"] = "off";
    NotificationMethod["PushNotification"] = "pushNotification";
    NotificationMethod["Sms"] = "sms";
})(NotificationMethod || (NotificationMethod = {}));
export var NotificationTemplateName;
(function (NotificationTemplateName) {
    NotificationTemplateName["AccountDeletedConfirmation"] = "accountDeletedConfirmation";
    NotificationTemplateName["ChannelInvitationAcceptedForMentee"] = "channelInvitationAcceptedForMentee";
    NotificationTemplateName["ChannelInvitationAcceptedForMentor"] = "channelInvitationAcceptedForMentor";
    NotificationTemplateName["ChannelInvitationDeclinedForMentee"] = "channelInvitationDeclinedForMentee";
    NotificationTemplateName["ChannelInvitationDeclinedForMentor"] = "channelInvitationDeclinedForMentor";
    NotificationTemplateName["ChannelInvitationReceivedForMentee"] = "channelInvitationReceivedForMentee";
    NotificationTemplateName["ChannelInvitationReceivedForMentor"] = "channelInvitationReceivedForMentor";
    NotificationTemplateName["ChannelMessageReceivedForMentee"] = "channelMessageReceivedForMentee";
    NotificationTemplateName["ChannelMessageReceivedForMentor"] = "channelMessageReceivedForMentor";
    NotificationTemplateName["CompleteProfileForMentee"] = "completeProfileForMentee";
    NotificationTemplateName["CompleteProfileForMentor"] = "completeProfileForMentor";
    NotificationTemplateName["CompleteSignUpForMentee"] = "completeSignUpForMentee";
    NotificationTemplateName["CompleteSignUpForMentor"] = "completeSignUpForMentor";
    NotificationTemplateName["MatchesRecommendationsForMentee"] = "matchesRecommendationsForMentee";
    NotificationTemplateName["MatchesRecommendationsForMentor"] = "matchesRecommendationsForMentor";
    NotificationTemplateName["NewPrivacyRules"] = "newPrivacyRules";
    NotificationTemplateName["Newsletter"] = "newsletter";
    NotificationTemplateName["ResetPasswordConfirmToken"] = "resetPasswordConfirmToken";
    NotificationTemplateName["ResetPasswordConfirmation"] = "resetPasswordConfirmation";
    NotificationTemplateName["SendFirstInvitationForMentee"] = "sendFirstInvitationForMentee";
    NotificationTemplateName["SendFirstInvitationForMentor"] = "sendFirstInvitationForMentor";
    NotificationTemplateName["Unset"] = "unset";
    NotificationTemplateName["WelcomeForMentee"] = "welcomeForMentee";
    NotificationTemplateName["WelcomeForMentor"] = "welcomeForMentor";
})(NotificationTemplateName || (NotificationTemplateName = {}));
export var NotificationType;
(function (NotificationType) {
    NotificationType["AccountDeletedConfirmation"] = "accountDeletedConfirmation";
    NotificationType["ChannelInvitationAccepted"] = "channelInvitationAccepted";
    NotificationType["ChannelInvitationDeclined"] = "channelInvitationDeclined";
    NotificationType["ChannelInvitationReceived"] = "channelInvitationReceived";
    NotificationType["ChannelMessageReceived"] = "channelMessageReceived";
    NotificationType["CompleteProfile"] = "completeProfile";
    NotificationType["CompleteSignUp"] = "completeSignUp";
    NotificationType["MatchesRecommendations"] = "matchesRecommendations";
    NotificationType["NewPrivacyRules"] = "newPrivacyRules";
    NotificationType["Newsletter"] = "newsletter";
    NotificationType["ResetPasswordConfirmToken"] = "resetPasswordConfirmToken";
    NotificationType["ResetPasswordConfirmation"] = "resetPasswordConfirmation";
    NotificationType["SendFirstInvitation"] = "sendFirstInvitation";
    NotificationType["Unset"] = "unset";
    NotificationType["Welcome"] = "welcome";
})(NotificationType || (NotificationType = {}));
export var ObjectChangedEventType;
(function (ObjectChangedEventType) {
    ObjectChangedEventType["Anonymized"] = "anonymized";
    ObjectChangedEventType["Created"] = "created";
    ObjectChangedEventType["Deleted"] = "deleted";
    ObjectChangedEventType["Updated"] = "updated";
})(ObjectChangedEventType || (ObjectChangedEventType = {}));
export var OptionType;
(function (OptionType) {
    OptionType["BlockUserReason"] = "blockUserReason";
    OptionType["CompanyStage"] = "companyStage";
    OptionType["CompanyType"] = "companyType";
    OptionType["ContactType"] = "contactType";
    OptionType["ContentTagType"] = "contentTagType";
    OptionType["Country"] = "country";
    OptionType["DeclineChannelInvitationReason"] = "declineChannelInvitationReason";
    OptionType["EducationLevel"] = "educationLevel";
    OptionType["ErrorCode"] = "errorCode";
    OptionType["Ethnicity"] = "ethnicity";
    OptionType["Expertise"] = "expertise";
    OptionType["Gender"] = "gender";
    OptionType["IndonesianCity"] = "indonesianCity";
    OptionType["IndonesianProvince"] = "indonesianProvince";
    OptionType["Industry"] = "industry";
    OptionType["IqlaaJordanianDistrict"] = "iqlaaJordanianDistrict";
    OptionType["IqlaaJordanianGovernorate"] = "iqlaaJordanianGovernorate";
    OptionType["Language"] = "language";
    OptionType["Mm2Expertise"] = "mm2Expertise";
    OptionType["Mm2Industry"] = "mm2Industry";
    OptionType["NotificationTypeOption"] = "notificationTypeOption";
    OptionType["Pronoun"] = "pronoun";
    OptionType["ReportUserReason"] = "reportUserReason";
    OptionType["Unset"] = "unset";
})(OptionType || (OptionType = {}));
export var ProductType;
(function (ProductType) {
    ProductType["GiftCard"] = "giftCard";
    ProductType["Other"] = "other";
})(ProductType || (ProductType = {}));
export var ReportUserReasonTextId;
(function (ReportUserReasonTextId) {
    ReportUserReasonTextId["BadActor"] = "badActor";
    ReportUserReasonTextId["FakePerson"] = "fakePerson";
    ReportUserReasonTextId["Harasses"] = "harasses";
    ReportUserReasonTextId["Impersonator"] = "impersonator";
    ReportUserReasonTextId["Inappropriate"] = "inappropriate";
    ReportUserReasonTextId["NotSet"] = "notSet";
    ReportUserReasonTextId["ObjectionableLanguage"] = "objectionableLanguage";
    ReportUserReasonTextId["PromotesHate"] = "promotesHate";
    ReportUserReasonTextId["SharesObjectionableContent"] = "sharesObjectionableContent";
    ReportUserReasonTextId["Spammer"] = "spammer";
    ReportUserReasonTextId["UsesObjectionableLanguage"] = "usesObjectionableLanguage";
    ReportUserReasonTextId["ViolatesRules"] = "violatesRules";
})(ReportUserReasonTextId || (ReportUserReasonTextId = {}));
export var ServiceName;
(function (ServiceName) {
    ServiceName["Accounts"] = "accounts";
    ServiceName["Admin"] = "admin";
    ServiceName["AdminJs"] = "adminJs";
    ServiceName["Analytics"] = "analytics";
    ServiceName["AppEvents"] = "appEvents";
    ServiceName["Assets"] = "assets";
    ServiceName["Aws"] = "aws";
    ServiceName["BgChannels"] = "bgChannels";
    ServiceName["BullBoard"] = "bullBoard";
    ServiceName["Channels"] = "channels";
    ServiceName["Content"] = "content";
    ServiceName["ContentTags"] = "contentTags";
    ServiceName["DataGenerator"] = "dataGenerator";
    ServiceName["Db"] = "db";
    ServiceName["Firebase"] = "firebase";
    ServiceName["GraphqlApi"] = "graphqlApi";
    ServiceName["Groups"] = "groups";
    ServiceName["Http"] = "http";
    ServiceName["I18N"] = "i18N";
    ServiceName["Logger"] = "logger";
    ServiceName["Marketplace"] = "marketplace";
    ServiceName["Matching"] = "matching";
    ServiceName["MessageBus"] = "messageBus";
    ServiceName["Messaging"] = "messaging";
    ServiceName["Mm2"] = "mm2";
    ServiceName["Models"] = "models";
    ServiceName["Moderation"] = "moderation";
    ServiceName["Nats"] = "nats";
    ServiceName["Nlp"] = "nlp";
    ServiceName["Redis"] = "redis";
    ServiceName["RestApi"] = "restApi";
    ServiceName["SecureId"] = "secureId";
    ServiceName["Slack"] = "slack";
    ServiceName["System"] = "system";
    ServiceName["Tracking"] = "tracking";
    ServiceName["Unset"] = "unset";
    ServiceName["Vts"] = "vts";
    ServiceName["Wallet"] = "wallet";
})(ServiceName || (ServiceName = {}));
export var ServiceRequestMessageId;
(function (ServiceRequestMessageId) {
    ServiceRequestMessageId["GroupRuleFailed"] = "groupRuleFailed";
    ServiceRequestMessageId["InvalidInput"] = "invalidInput";
    ServiceRequestMessageId["SystemError"] = "systemError";
    ServiceRequestMessageId["Unknown"] = "unknown";
})(ServiceRequestMessageId || (ServiceRequestMessageId = {}));
export var ServiceRequestResult;
(function (ServiceRequestResult) {
    ServiceRequestResult["Error"] = "error";
    ServiceRequestResult["Ok"] = "ok";
    ServiceRequestResult["Unset"] = "unset";
})(ServiceRequestResult || (ServiceRequestResult = {}));
export var ServiceRequestSource;
(function (ServiceRequestSource) {
    ServiceRequestSource["Admin"] = "admin";
    ServiceRequestSource["Analytics"] = "analytics";
    ServiceRequestSource["App"] = "app";
    ServiceRequestSource["GraphqlApi"] = "graphqlApi";
    ServiceRequestSource["HttpRoute"] = "httpRoute";
    ServiceRequestSource["Mm2"] = "mm2";
    ServiceRequestSource["RestApi"] = "restApi";
    ServiceRequestSource["System"] = "system";
    ServiceRequestSource["Vts"] = "vts";
    ServiceRequestSource["Wallet"] = "wallet";
})(ServiceRequestSource || (ServiceRequestSource = {}));
export var ServiceRequestType;
(function (ServiceRequestType) {
    ServiceRequestType["GraphQlMutationAddChannelMessageEvent"] = "graphQlMutationAddChannelMessageEvent";
    ServiceRequestType["GraphQlMutationAddFeatureToUser"] = "graphQlMutationAddFeatureToUser";
    ServiceRequestType["GraphQlMutationAddUserToGroup"] = "graphQlMutationAddUserToGroup";
    ServiceRequestType["GraphQlMutationArchiveChannelForUserByMe"] = "graphQlMutationArchiveChannelForUserByMe";
    ServiceRequestType["GraphQlMutationBlockUser"] = "graphQlMutationBlockUser";
    ServiceRequestType["GraphQlMutationClearAllAnalyticsSyncInfo"] = "graphQlMutationClearAllAnalyticsSyncInfo";
    ServiceRequestType["GraphQlMutationClearAllSyncInfo"] = "graphQlMutationClearAllSyncInfo";
    ServiceRequestType["GraphQlMutationClearMyShoppingCart"] = "graphQlMutationClearMyShoppingCart";
    ServiceRequestType["GraphQlMutationClearShoppingCart"] = "graphQlMutationClearShoppingCart";
    ServiceRequestType["GraphQlMutationCreateAcademicExperience"] = "graphQlMutationCreateAcademicExperience";
    ServiceRequestType["GraphQlMutationCreateAdminTask"] = "graphQlMutationCreateAdminTask";
    ServiceRequestType["GraphQlMutationCreateAnalyticsSynchronization"] = "graphQlMutationCreateAnalyticsSynchronization";
    ServiceRequestType["GraphQlMutationCreateBusinessExperience"] = "graphQlMutationCreateBusinessExperience";
    ServiceRequestType["GraphQlMutationCreateChannel"] = "graphQlMutationCreateChannel";
    ServiceRequestType["GraphQlMutationCreateChannelInvitation"] = "graphQlMutationCreateChannelInvitation";
    ServiceRequestType["GraphQlMutationCreateChannelMessage"] = "graphQlMutationCreateChannelMessage";
    ServiceRequestType["GraphQlMutationCreateChannelParticipant"] = "graphQlMutationCreateChannelParticipant";
    ServiceRequestType["GraphQlMutationCreateCompany"] = "graphQlMutationCreateCompany";
    ServiceRequestType["GraphQlMutationCreateContact"] = "graphQlMutationCreateContact";
    ServiceRequestType["GraphQlMutationCreateContentTag"] = "graphQlMutationCreateContentTag";
    ServiceRequestType["GraphQlMutationCreateGroup"] = "graphQlMutationCreateGroup";
    ServiceRequestType["GraphQlMutationCreateGroupMembership"] = "graphQlMutationCreateGroupMembership";
    ServiceRequestType["GraphQlMutationCreateMm2Synchronization"] = "graphQlMutationCreateMm2Synchronization";
    ServiceRequestType["GraphQlMutationCreateMultiStepAction"] = "graphQlMutationCreateMultiStepAction";
    ServiceRequestType["GraphQlMutationCreateNatsMessage"] = "graphQlMutationCreateNatsMessage";
    ServiceRequestType["GraphQlMutationCreateNotification"] = "graphQlMutationCreateNotification";
    ServiceRequestType["GraphQlMutationCreateNotificationTemplate"] = "graphQlMutationCreateNotificationTemplate";
    ServiceRequestType["GraphQlMutationCreatePurchaseOrderField"] = "graphQlMutationCreatePurchaseOrderField";
    ServiceRequestType["GraphQlMutationCreateShoppingCartItem"] = "graphQlMutationCreateShoppingCartItem";
    ServiceRequestType["GraphQlMutationCreateSupportChannelConfig"] = "graphQlMutationCreateSupportChannelConfig";
    ServiceRequestType["GraphQlMutationCreateUploadedAsset"] = "graphQlMutationCreateUploadedAsset";
    ServiceRequestType["GraphQlMutationCreateUserDevice"] = "graphQlMutationCreateUserDevice";
    ServiceRequestType["GraphQlMutationCreateUserSearch"] = "graphQlMutationCreateUserSearch";
    ServiceRequestType["GraphQlMutationCreateUserTracking"] = "graphQlMutationCreateUserTracking";
    ServiceRequestType["GraphQlMutationCreateWalletItem"] = "graphQlMutationCreateWalletItem";
    ServiceRequestType["GraphQlMutationCreateWalletItemTransfer"] = "graphQlMutationCreateWalletItemTransfer";
    ServiceRequestType["GraphQlMutationDeleteAcademicExperience"] = "graphQlMutationDeleteAcademicExperience";
    ServiceRequestType["GraphQlMutationDeleteAdminTask"] = "graphQlMutationDeleteAdminTask";
    ServiceRequestType["GraphQlMutationDeleteAllMm2DataInMm3"] = "graphQlMutationDeleteAllMm2DataInMm3";
    ServiceRequestType["GraphQlMutationDeleteAnalyticsSynchronization"] = "graphQlMutationDeleteAnalyticsSynchronization";
    ServiceRequestType["GraphQlMutationDeleteBusinessExperience"] = "graphQlMutationDeleteBusinessExperience";
    ServiceRequestType["GraphQlMutationDeleteChannel"] = "graphQlMutationDeleteChannel";
    ServiceRequestType["GraphQlMutationDeleteChannelInvitation"] = "graphQlMutationDeleteChannelInvitation";
    ServiceRequestType["GraphQlMutationDeleteChannelMessage"] = "graphQlMutationDeleteChannelMessage";
    ServiceRequestType["GraphQlMutationDeleteChannelParticipant"] = "graphQlMutationDeleteChannelParticipant";
    ServiceRequestType["GraphQlMutationDeleteCompany"] = "graphQlMutationDeleteCompany";
    ServiceRequestType["GraphQlMutationDeleteContentTag"] = "graphQlMutationDeleteContentTag";
    ServiceRequestType["GraphQlMutationDeleteGroup"] = "graphQlMutationDeleteGroup";
    ServiceRequestType["GraphQlMutationDeleteGroupCms"] = "graphQlMutationDeleteGroupCms";
    ServiceRequestType["GraphQlMutationDeleteGroupMembership"] = "graphQlMutationDeleteGroupMembership";
    ServiceRequestType["GraphQlMutationDeleteMm2Synchronization"] = "graphQlMutationDeleteMm2Synchronization";
    ServiceRequestType["GraphQlMutationDeleteMyUser"] = "graphQlMutationDeleteMyUser";
    ServiceRequestType["GraphQlMutationDeleteNotification"] = "graphQlMutationDeleteNotification";
    ServiceRequestType["GraphQlMutationDeleteNotificationTemplate"] = "graphQlMutationDeleteNotificationTemplate";
    ServiceRequestType["GraphQlMutationDeleteShoppingCartItem"] = "graphQlMutationDeleteShoppingCartItem";
    ServiceRequestType["GraphQlMutationDeleteSupportChannelConfig"] = "graphQlMutationDeleteSupportChannelConfig";
    ServiceRequestType["GraphQlMutationDeleteUploadedAsset"] = "graphQlMutationDeleteUploadedAsset";
    ServiceRequestType["GraphQlMutationDeleteUser"] = "graphQlMutationDeleteUser";
    ServiceRequestType["GraphQlMutationDeleteUserSearch"] = "graphQlMutationDeleteUserSearch";
    ServiceRequestType["GraphQlMutationDeleteWalletItem"] = "graphQlMutationDeleteWalletItem";
    ServiceRequestType["GraphQlMutationDeleteWalletItemTransfer"] = "graphQlMutationDeleteWalletItemTransfer";
    ServiceRequestType["GraphQlMutationEndMySession"] = "graphQlMutationEndMySession";
    ServiceRequestType["GraphQlMutationFindAdminTaskById"] = "graphQlMutationFindAdminTaskById";
    ServiceRequestType["GraphQlMutationFindUploadedAssetById"] = "graphQlMutationFindUploadedAssetById";
    ServiceRequestType["GraphQlMutationFindUploadedAssetForUser"] = "graphQlMutationFindUploadedAssetForUser";
    ServiceRequestType["GraphQlMutationInitAssetUpload"] = "graphQlMutationInitAssetUpload";
    ServiceRequestType["GraphQlMutationMarkChannelMessagesAsSeenByMe"] = "graphQlMutationMarkChannelMessagesAsSeenByMe";
    ServiceRequestType["GraphQlMutationMarkInAppMessageReceived"] = "graphQlMutationMarkInAppMessageReceived";
    ServiceRequestType["GraphQlMutationNlpLabelMessage"] = "graphQlMutationNlpLabelMessage";
    ServiceRequestType["GraphQlMutationPauseAnalyticsSynchronization"] = "graphQlMutationPauseAnalyticsSynchronization";
    ServiceRequestType["GraphQlMutationRemoveFeatureFromUser"] = "graphQlMutationRemoveFeatureFromUser";
    ServiceRequestType["GraphQlMutationRemoveUserFromAllGroups"] = "graphQlMutationRemoveUserFromAllGroups";
    ServiceRequestType["GraphQlMutationRemoveUserFromGroup"] = "graphQlMutationRemoveUserFromGroup";
    ServiceRequestType["GraphQlMutationReportUser"] = "graphQlMutationReportUser";
    ServiceRequestType["GraphQlMutationRunAnalyticsSynchronization"] = "graphQlMutationRunAnalyticsSynchronization";
    ServiceRequestType["GraphQlMutationRunDataGenerator"] = "graphQlMutationRunDataGenerator";
    ServiceRequestType["GraphQlMutationRunMm2Synchronization"] = "graphQlMutationRunMm2Synchronization";
    ServiceRequestType["GraphQlMutationSendMultiStepActionNotification"] = "graphQlMutationSendMultiStepActionNotification";
    ServiceRequestType["GraphQlMutationSignInUser"] = "graphQlMutationSignInUser";
    ServiceRequestType["GraphQlMutationSignMeOut"] = "graphQlMutationSignMeOut";
    ServiceRequestType["GraphQlMutationSignUpOauthUser"] = "graphQlMutationSignUpOauthUser";
    ServiceRequestType["GraphQlMutationSignUpUser"] = "graphQlMutationSignUpUser";
    ServiceRequestType["GraphQlMutationStartMySession"] = "graphQlMutationStartMySession";
    ServiceRequestType["GraphQlMutationUnblockUser"] = "graphQlMutationUnblockUser";
    ServiceRequestType["GraphQlMutationUpdateAcademicExperience"] = "graphQlMutationUpdateAcademicExperience";
    ServiceRequestType["GraphQlMutationUpdateAdminTask"] = "graphQlMutationUpdateAdminTask";
    ServiceRequestType["GraphQlMutationUpdateBusinessExperience"] = "graphQlMutationUpdateBusinessExperience";
    ServiceRequestType["GraphQlMutationUpdateChannel"] = "graphQlMutationUpdateChannel";
    ServiceRequestType["GraphQlMutationUpdateChannelInvitation"] = "graphQlMutationUpdateChannelInvitation";
    ServiceRequestType["GraphQlMutationUpdateChannelMessage"] = "graphQlMutationUpdateChannelMessage";
    ServiceRequestType["GraphQlMutationUpdateChannelParticipant"] = "graphQlMutationUpdateChannelParticipant";
    ServiceRequestType["GraphQlMutationUpdateCompany"] = "graphQlMutationUpdateCompany";
    ServiceRequestType["GraphQlMutationUpdateContact"] = "graphQlMutationUpdateContact";
    ServiceRequestType["GraphQlMutationUpdateContentTag"] = "graphQlMutationUpdateContentTag";
    ServiceRequestType["GraphQlMutationUpdateGroup"] = "graphQlMutationUpdateGroup";
    ServiceRequestType["GraphQlMutationUpdateGroupMembership"] = "graphQlMutationUpdateGroupMembership";
    ServiceRequestType["GraphQlMutationUpdateMyUser"] = "graphQlMutationUpdateMyUser";
    ServiceRequestType["GraphQlMutationUpdateNlpConversation"] = "graphQlMutationUpdateNlpConversation";
    ServiceRequestType["GraphQlMutationUpdateNlpMessage"] = "graphQlMutationUpdateNlpMessage";
    ServiceRequestType["GraphQlMutationUpdateNotification"] = "graphQlMutationUpdateNotification";
    ServiceRequestType["GraphQlMutationUpdateNotificationTemplate"] = "graphQlMutationUpdateNotificationTemplate";
    ServiceRequestType["GraphQlMutationUpdateShoppingCartItem"] = "graphQlMutationUpdateShoppingCartItem";
    ServiceRequestType["GraphQlMutationUpdateSupportChannelConfig"] = "graphQlMutationUpdateSupportChannelConfig";
    ServiceRequestType["GraphQlMutationUpdateUploadedAsset"] = "graphQlMutationUpdateUploadedAsset";
    ServiceRequestType["GraphQlMutationUpdateUser"] = "graphQlMutationUpdateUser";
    ServiceRequestType["GraphQlMutationUpdateUserDevice"] = "graphQlMutationUpdateUserDevice";
    ServiceRequestType["GraphQlMutationUpdateUserSearch"] = "graphQlMutationUpdateUserSearch";
    ServiceRequestType["GraphQlMutationUpdateUserTracking"] = "graphQlMutationUpdateUserTracking";
    ServiceRequestType["GraphQlMutationUpdateWalletItem"] = "graphQlMutationUpdateWalletItem";
    ServiceRequestType["GraphQlMutationUpdateWalletItemTransfer"] = "graphQlMutationUpdateWalletItemTransfer";
    ServiceRequestType["GraphQlMutationUpsertBackgroundTask"] = "graphQlMutationUpsertBackgroundTask";
    ServiceRequestType["GraphQlMutationVerifyMultiStepActionToken"] = "graphQlMutationVerifyMultiStepActionToken";
    ServiceRequestType["GraphQlQueryAdminTaskDefinitions"] = "graphQlQueryAdminTaskDefinitions";
    ServiceRequestType["GraphQlQueryAvailableUserHandle"] = "graphQlQueryAvailableUserHandle";
    ServiceRequestType["GraphQlQueryBackgroundTask"] = "graphQlQueryBackgroundTask";
    ServiceRequestType["GraphQlQueryChannelInvitations"] = "graphQlQueryChannelInvitations";
    ServiceRequestType["GraphQlQueryChannelMessageChannel"] = "graphQlQueryChannelMessageChannel";
    ServiceRequestType["GraphQlQueryChannelParticipants"] = "graphQlQueryChannelParticipants";
    ServiceRequestType["GraphQlQueryContactTypes"] = "graphQlQueryContactTypes";
    ServiceRequestType["GraphQlQueryContacts"] = "graphQlQueryContacts";
    ServiceRequestType["GraphQlQueryContentTag"] = "graphQlQueryContentTag";
    ServiceRequestType["GraphQlQueryFindAdminTask"] = "graphQlQueryFindAdminTask";
    ServiceRequestType["GraphQlQueryFindAnalyticsServiceRecord"] = "graphQlQueryFindAnalyticsServiceRecord";
    ServiceRequestType["GraphQlQueryFindAnalyticsSynchronizationById"] = "graphQlQueryFindAnalyticsSynchronizationById";
    ServiceRequestType["GraphQlQueryFindAndUpdateAllMm2Users"] = "graphQlQueryFindAndUpdateAllMm2Users";
    ServiceRequestType["GraphQlQueryFindAvailableUserHandle"] = "graphQlQueryFindAvailableUserHandle";
    ServiceRequestType["GraphQlQueryFindBrands"] = "graphQlQueryFindBrands";
    ServiceRequestType["GraphQlQueryFindChannelById"] = "graphQlQueryFindChannelById";
    ServiceRequestType["GraphQlQueryFindChannelInvitationById"] = "graphQlQueryFindChannelInvitationById";
    ServiceRequestType["GraphQlQueryFindChannelInvitationsBetweenUsers"] = "graphQlQueryFindChannelInvitationsBetweenUsers";
    ServiceRequestType["GraphQlQueryFindChannelInvitationsForUser"] = "graphQlQueryFindChannelInvitationsForUser";
    ServiceRequestType["GraphQlQueryFindChannelMessageById"] = "graphQlQueryFindChannelMessageById";
    ServiceRequestType["GraphQlQueryFindChannelMessages"] = "graphQlQueryFindChannelMessages";
    ServiceRequestType["GraphQlQueryFindChannelParticipantById"] = "graphQlQueryFindChannelParticipantById";
    ServiceRequestType["GraphQlQueryFindChannelParticipants"] = "graphQlQueryFindChannelParticipants";
    ServiceRequestType["GraphQlQueryFindChannels"] = "graphQlQueryFindChannels";
    ServiceRequestType["GraphQlQueryFindChannelsForUser"] = "graphQlQueryFindChannelsForUser";
    ServiceRequestType["GraphQlQueryFindContact"] = "graphQlQueryFindContact";
    ServiceRequestType["GraphQlQueryFindContactById"] = "graphQlQueryFindContactById";
    ServiceRequestType["GraphQlQueryFindContacts"] = "graphQlQueryFindContacts";
    ServiceRequestType["GraphQlQueryFindCountries"] = "graphQlQueryFindCountries";
    ServiceRequestType["GraphQlQueryFindExpertises"] = "graphQlQueryFindExpertises";
    ServiceRequestType["GraphQlQueryFindGiftCardProducts"] = "graphQlQueryFindGiftCardProducts";
    ServiceRequestType["GraphQlQueryFindGroupById"] = "graphQlQueryFindGroupById";
    ServiceRequestType["GraphQlQueryFindGroupByIdent"] = "graphQlQueryFindGroupByIdent";
    ServiceRequestType["GraphQlQueryFindGroupCmsByGroupId"] = "graphQlQueryFindGroupCmsByGroupId";
    ServiceRequestType["GraphQlQueryFindGroupCmsByGroupIdent"] = "graphQlQueryFindGroupCmsByGroupIdent";
    ServiceRequestType["GraphQlQueryFindGroupCmsById"] = "graphQlQueryFindGroupCmsById";
    ServiceRequestType["GraphQlQueryFindGroupMembershipByIdField"] = "graphQlQueryFindGroupMembershipByIdField";
    ServiceRequestType["GraphQlQueryFindGroupMemberships"] = "graphQlQueryFindGroupMemberships";
    ServiceRequestType["GraphQlQueryFindGroupsField"] = "graphQlQueryFindGroupsField";
    ServiceRequestType["GraphQlQueryFindIndustries"] = "graphQlQueryFindIndustries";
    ServiceRequestType["GraphQlQueryFindMarketplaceServiceRecord"] = "graphQlQueryFindMarketplaceServiceRecord";
    ServiceRequestType["GraphQlQueryFindMm2SynchronizationById"] = "graphQlQueryFindMm2SynchronizationById";
    ServiceRequestType["GraphQlQueryFindMyBlockedUsers"] = "graphQlQueryFindMyBlockedUsers";
    ServiceRequestType["GraphQlQueryFindMyChannels"] = "graphQlQueryFindMyChannels";
    ServiceRequestType["GraphQlQueryFindMyShoppingCart"] = "graphQlQueryFindMyShoppingCart";
    ServiceRequestType["GraphQlQueryFindMyUser"] = "graphQlQueryFindMyUser";
    ServiceRequestType["GraphQlQueryFindMyUserDevices"] = "graphQlQueryFindMyUserDevices";
    ServiceRequestType["GraphQlQueryFindMyWallet"] = "graphQlQueryFindMyWallet";
    ServiceRequestType["GraphQlQueryFindNlpConversation"] = "graphQlQueryFindNlpConversation";
    ServiceRequestType["GraphQlQueryFindOptions"] = "graphQlQueryFindOptions";
    ServiceRequestType["GraphQlQueryFindPendingChannelInvitationsForUser"] = "graphQlQueryFindPendingChannelInvitationsForUser";
    ServiceRequestType["GraphQlQueryFindProductCategories"] = "graphQlQueryFindProductCategories";
    ServiceRequestType["GraphQlQueryFindPurchaseOrderItems"] = "graphQlQueryFindPurchaseOrderItems";
    ServiceRequestType["GraphQlQueryFindPurchaseOrders"] = "graphQlQueryFindPurchaseOrders";
    ServiceRequestType["GraphQlQueryFindShoppingCartItems"] = "graphQlQueryFindShoppingCartItems";
    ServiceRequestType["GraphQlQueryFindShoppingCarts"] = "graphQlQueryFindShoppingCarts";
    ServiceRequestType["GraphQlQueryFindTrainingById"] = "graphQlQueryFindTrainingById";
    ServiceRequestType["GraphQlQueryFindTrainingSessionById"] = "graphQlQueryFindTrainingSessionById";
    ServiceRequestType["GraphQlQueryFindTrainingSessionsByTrainingId"] = "graphQlQueryFindTrainingSessionsByTrainingId";
    ServiceRequestType["GraphQlQueryFindTrainingSessionsForMe"] = "graphQlQueryFindTrainingSessionsForMe";
    ServiceRequestType["GraphQlQueryFindTrainingsForMe"] = "graphQlQueryFindTrainingsForMe";
    ServiceRequestType["GraphQlQueryFindTrainingsForUser"] = "graphQlQueryFindTrainingsForUser";
    ServiceRequestType["GraphQlQueryFindUploadedAssetById"] = "graphQlQueryFindUploadedAssetById";
    ServiceRequestType["GraphQlQueryFindUploadedAssets"] = "graphQlQueryFindUploadedAssets";
    ServiceRequestType["GraphQlQueryFindUploadedAssetsForUser"] = "graphQlQueryFindUploadedAssetsForUser";
    ServiceRequestType["GraphQlQueryFindUserById"] = "graphQlQueryFindUserById";
    ServiceRequestType["GraphQlQueryFindUserByIdent"] = "graphQlQueryFindUserByIdent";
    ServiceRequestType["GraphQlQueryFindUserDeviceById"] = "graphQlQueryFindUserDeviceById";
    ServiceRequestType["GraphQlQueryFindUserDevices"] = "graphQlQueryFindUserDevices";
    ServiceRequestType["GraphQlQueryFindUserSearchById"] = "graphQlQueryFindUserSearchById";
    ServiceRequestType["GraphQlQueryFindUserSearchResults"] = "graphQlQueryFindUserSearchResults";
    ServiceRequestType["GraphQlQueryFindUsers"] = "graphQlQueryFindUsers";
    ServiceRequestType["GraphQlQueryFindWalletItemById"] = "graphQlQueryFindWalletItemById";
    ServiceRequestType["GraphQlQueryFindWalletItemTransferById"] = "graphQlQueryFindWalletItemTransferById";
    ServiceRequestType["GraphQlQueryFindWalletItemTransfers"] = "graphQlQueryFindWalletItemTransfers";
    ServiceRequestType["GraphQlQueryFindWalletItems"] = "graphQlQueryFindWalletItems";
    ServiceRequestType["GraphQlQueryFindWalletServiceRecord"] = "graphQlQueryFindWalletServiceRecord";
    ServiceRequestType["GraphQlQueryFindWallets"] = "graphQlQueryFindWallets";
    ServiceRequestType["GraphQlQueryGetMm2Integration"] = "graphQlQueryGetMm2Integration";
    ServiceRequestType["GraphQlQueryGetMultiStepActionProgress"] = "graphQlQueryGetMultiStepActionProgress";
    ServiceRequestType["GraphQlQueryLatestUserDevice"] = "graphQlQueryLatestUserDevice";
    ServiceRequestType["GraphQlQueryMyContacts"] = "graphQlQueryMyContacts";
    ServiceRequestType["GraphQlQueryMyGroupMemberships"] = "graphQlQueryMyGroupMemberships";
    ServiceRequestType["GraphQlQueryMyInbox"] = "graphQlQueryMyInbox";
    ServiceRequestType["GraphQlQueryNotificationTemplate"] = "graphQlQueryNotificationTemplate";
    ServiceRequestType["GraphQlQueryUnreadInAppMessages"] = "graphQlQueryUnreadInAppMessages";
    ServiceRequestType["GraphQlQueryUser"] = "graphQlQueryUser";
    ServiceRequestType["GraphQlQueryUserChannels"] = "graphQlQueryUserChannels";
    ServiceRequestType["GraphQlQueryUserCompanies"] = "graphQlQueryUserCompanies";
    ServiceRequestType["GraphQlQueryUserGroupMembers"] = "graphQlQueryUserGroupMembers";
    ServiceRequestType["GraphQlQueryUserGroups"] = "graphQlQueryUserGroups";
    ServiceRequestType["GraphQlQueryUserInboxUser"] = "graphQlQueryUserInboxUser";
    ServiceRequestType["GraphQlQueryUserSearchFoundUsers"] = "graphQlQueryUserSearchFoundUsers";
    ServiceRequestType["GraphQlQueryVerifyMyPassword"] = "graphQlQueryVerifyMyPassword";
    ServiceRequestType["Unset"] = "unset";
})(ServiceRequestType || (ServiceRequestType = {}));
export var SortDirection;
(function (SortDirection) {
    SortDirection["Asc"] = "asc";
    SortDirection["Desc"] = "desc";
})(SortDirection || (SortDirection = {}));
export var UiLanguage;
(function (UiLanguage) {
    UiLanguage["Ar"] = "ar";
    UiLanguage["En"] = "en";
    UiLanguage["Es"] = "es";
    UiLanguage["Id"] = "id";
    UiLanguage["Ru"] = "ru";
    UiLanguage["So"] = "so";
})(UiLanguage || (UiLanguage = {}));
export var UploadedAssetType;
(function (UploadedAssetType) {
    UploadedAssetType["Avatar"] = "avatar";
    UploadedAssetType["ProfileHeroImage"] = "profileHeroImage";
    UploadedAssetType["Unset"] = "unset";
})(UploadedAssetType || (UploadedAssetType = {}));
export var UserIdentType;
(function (UserIdentType) {
    UserIdentType["Any"] = "any";
    UserIdentType["Email"] = "email";
    UserIdentType["Id"] = "id";
    UserIdentType["InviteCode"] = "inviteCode";
    UserIdentType["OauthProfileUrl"] = "oauthProfileUrl";
    UserIdentType["OauthUserId"] = "oauthUserId";
    UserIdentType["PhoneNumber"] = "phoneNumber";
    UserIdentType["UserHandle"] = "userHandle";
})(UserIdentType || (UserIdentType = {}));
export var UserProfileRole;
(function (UserProfileRole) {
    UserProfileRole["Both"] = "both";
    UserProfileRole["Mentee"] = "mentee";
    UserProfileRole["Mentor"] = "mentor";
    UserProfileRole["None"] = "none";
})(UserProfileRole || (UserProfileRole = {}));
export var UserRole;
(function (UserRole) {
    UserRole["Admin"] = "admin";
    UserRole["Qa"] = "qa";
    UserRole["Staff"] = "staff";
    UserRole["Support"] = "support";
    UserRole["Test"] = "test";
})(UserRole || (UserRole = {}));
export var UserSearchFieldOption;
(function (UserSearchFieldOption) {
    UserSearchFieldOption["Any"] = "any";
    UserSearchFieldOption["IsFalse"] = "isFalse";
    UserSearchFieldOption["IsTrue"] = "isTrue";
    UserSearchFieldOption["Match"] = "match";
})(UserSearchFieldOption || (UserSearchFieldOption = {}));
export var UserSearchSubscriptionType;
(function (UserSearchSubscriptionType) {
    UserSearchSubscriptionType["Daily"] = "daily";
    UserSearchSubscriptionType["Monthly"] = "monthly";
    UserSearchSubscriptionType["None"] = "none";
    UserSearchSubscriptionType["Weekly"] = "weekly";
})(UserSearchSubscriptionType || (UserSearchSubscriptionType = {}));
export var UserSearchType;
(function (UserSearchType) {
    UserSearchType["MenteeRecommendation"] = "menteeRecommendation";
    UserSearchType["MentorRecommendation"] = "mentorRecommendation";
    UserSearchType["Search"] = "search";
})(UserSearchType || (UserSearchType = {}));
export var WalletItemSource;
(function (WalletItemSource) {
    WalletItemSource["Gifted"] = "gifted";
    WalletItemSource["Purchased"] = "purchased";
    WalletItemSource["User"] = "user";
})(WalletItemSource || (WalletItemSource = {}));
//# sourceMappingURL=graphql.js.map