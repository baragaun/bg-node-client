import { AppFeature, AuthType, UiLanguage, UserRole } from '../../enums.js';
import { BaseModel } from './BaseModel.js';
import { LabeledStringValue } from './LabeledStringValue.js';
import { UserBlock } from './UserBlock.js';
import { UserPreferences } from './UserPreferences.js';
export declare class User extends BaseModel {
    firstName?: string | null;
    lastName?: string | null;
    userHandle?: string | null;
    phoneNumber?: string | null;
    phoneNumberUpdatedAt?: string | null;
    isPhoneNumberVerified: boolean;
    email?: string | null;
    emailUpdatedAt?: string | null;
    isEmailVerified: boolean;
    emailSource?: string | null;
    genderTextId?: string | null;
    cityOfResidence?: string | null;
    regionOfResidence?: string | null;
    countryOfResidenceTextId?: string | null;
    postalCode?: string | null;
    avatarUrl?: string | null;
    websites?: LabeledStringValue[] | null;
    authType?: AuthType | null;
    passwordHash?: string | null;
    tfaBackupCodes?: string | null;
    passwordUpdatedAt?: string | null;
    preferredLanguageTextId?: string | null;
    spokenLanguagesTextIds: string[];
    selectedUiLanguageTextId?: UiLanguage | null;
    fallbackUiLanguageTextId?: UiLanguage | null;
    discoverable?: boolean | null;
    roles: UserRole[];
    appFeatures?: AppFeature[] | null;
    source?: string | null;
    timezone?: string | null;
    preferences?: UserPreferences | null;
    trustLevel: number;
    signedInAt?: string | null;
    signedOutAt?: string | null;
    latestActivityAt?: string | null;
    userBlocks?: UserBlock[] | null;
    inactivatedAt?: string | null;
    inactivatedBy?: string | null;
    termsAndConditionsAcceptedAt?: string | null;
    optIntoNewsletter?: boolean | null;
    onboardingStage?: string | null;
    suspendedAt?: string | null;
    suspendedBy?: string | null;
    constructor(attributes?: Partial<User>);
}
