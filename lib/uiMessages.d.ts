import { UiLanguage, UiMessageType } from './enums.js';
declare let uiMessages: {
    en: {
        "BgNodeClientUiErrorCode.invalidInput": string;
        "BgNodeClientUiErrorCode.notFound": string;
        "BgNodeClientUiErrorCode.unauthorized": string;
        "ServerErrorCode.academicExperienceNameMissing": string;
        "ServerErrorCode.academicExperienceUserIdMissing": string;
        "ServerErrorCode.alreadyExists": string;
        "ServerErrorCode.alreadyGroupMember": string;
        "ServerErrorCode.alreadyInitialized": string;
        "ServerErrorCode.authTokenNoMatch": string;
        "ServerErrorCode.businessExperienceNameMissing": string;
        "ServerErrorCode.businessExperienceUserIdMissing": string;
        "ServerErrorCode.companyNameMissing": string;
        "ServerErrorCode.companyNameTaken": string;
        "ServerErrorCode.contentTagAlreadyExist": string;
        "ServerErrorCode.contentTagModelTypeMissing": string;
        "ServerErrorCode.contentTagObjectIdMissing": string;
        "ServerErrorCode.contentTagTypeMissing": string;
        "ServerErrorCode.currentPasswordIncorrect": string;
        "ServerErrorCode.currentPasswordMissing": string;
        "ServerErrorCode.dataValidationFailed": string;
        "ServerErrorCode.deviceUuidMissing": string;
        "ServerErrorCode.emailInvalid": string;
        "ServerErrorCode.emailMissing": string;
        "ServerErrorCode.exceedsLimit": string;
        "ServerErrorCode.expertiseBidirectionalMappingError": string;
        "ServerErrorCode.expertiseTextIdDNE": string;
        "ServerErrorCode.failedToConnect": string;
        "ServerErrorCode.failedToCreateAccount": string;
        "ServerErrorCode.failedToSignin": string;
        "ServerErrorCode.failedToUpdate": string;
        "ServerErrorCode.groupLevelTooDeep": string;
        "ServerErrorCode.groupNameMissing": string;
        "ServerErrorCode.groupNameTaken": string;
        "ServerErrorCode.groupNotActive": string;
        "ServerErrorCode.groupRuleFailed": string;
        "ServerErrorCode.groupSlugMissing": string;
        "ServerErrorCode.groupSlugTaken": string;
        "ServerErrorCode.invalidInput": string;
        "ServerErrorCode.invalidPushNotificationToken": string;
        "ServerErrorCode.matchingEngineNameMissing": string;
        "ServerErrorCode.matchingEngineNameTaken": string;
        "ServerErrorCode.noLiveWebsocketConnectionAvailable": string;
        "ServerErrorCode.noNotificationMethodAvailable": string;
        "ServerErrorCode.notAGroupMember": string;
        "ServerErrorCode.notAllowed": string;
        "ServerErrorCode.notFound": string;
        "ServerErrorCode.notImplemented": string;
        "ServerErrorCode.notInitialized": string;
        "ServerErrorCode.notSupported": string;
        "ServerErrorCode.parentGroupNotFound": string;
        "ServerErrorCode.passwordMissing": string;
        "ServerErrorCode.passwordNoMatch": string;
        "ServerErrorCode.phoneNumberInvalid": string;
        "ServerErrorCode.phoneNumberMissing": string;
        "ServerErrorCode.phoneNumberNotSupported": string;
        "ServerErrorCode.serviceNotAvailable": string;
        "ServerErrorCode.systemError": string;
        "ServerErrorCode.timeout": string;
        "ServerErrorCode.tooManyRequests": string;
        "ServerErrorCode.trackingInvalidTrackId": string;
        "ServerErrorCode.trainingCannotUpdateFields": string;
        "ServerErrorCode.trainingContentPageCannotUpdateFields": string;
        "ServerErrorCode.trainingContentPageMm2IdMissing": string;
        "ServerErrorCode.trainingContentPageMm2IdTaken": string;
        "ServerErrorCode.trainingMm2IdMissing": string;
        "ServerErrorCode.trainingMm2IdTaken": string;
        "ServerErrorCode.trainingSessionCannotUpdateFields": string;
        "ServerErrorCode.trainingSessionMm2IdMissing": string;
        "ServerErrorCode.trainingSessionMm2IdTaken": string;
        "ServerErrorCode.trainingSessionProgressInvalid": string;
        "ServerErrorCode.trainingSessionTrainingMissing": string;
        "ServerErrorCode.trainingSessionUserIdMissing": string;
        "ServerErrorCode.unauthorized": string;
        "ServerErrorCode.unknown": string;
        "ServerErrorCode.userAlreadyExists": string;
        "ServerErrorCode.userDeviceNotFound": string;
        "ServerErrorCode.userNotActive": string;
        "ServerErrorCode.userNotFound": string;
        "MultiStepActionResult.confirmTokenMismatch": string;
        "MultiStepActionResult.dataValidationFailed": string;
        "MultiStepActionResult.deviceNotFound": string;
        "MultiStepActionResult.emailMismatch": string;
        "MultiStepActionResult.emailNotVerified": string;
        "MultiStepActionResult.error": string;
        "MultiStepActionResult.expired": string;
        "MultiStepActionResult.invalidEmail": string;
        "MultiStepActionResult.missingEmail": string;
        "MultiStepActionResult.missingPhoneNumber": string;
        "MultiStepActionResult.notFound": string;
        "MultiStepActionResult.ok": string;
        "MultiStepActionResult.passed": string;
        "MultiStepActionResult.passwordMismatch": string;
        "MultiStepActionResult.passwordUpdated": string;
        "MultiStepActionResult.phoneNumberInvalid": string;
        "MultiStepActionResult.phoneNumberMismatch": string;
        "MultiStepActionResult.phoneNumberNotVerified": string;
        "MultiStepActionResult.systemError": string;
        "MultiStepActionResult.unset": string;
        "MultiStepActionResult.userFailedValidation": string;
        "MultiStepActionResult.userNotFound": string;
        "MultiStepActionResult.userNotSignedIn": string;
    };
};
export declare const translate: (key: string, uiMessageType?: UiMessageType, language?: UiLanguage, defaultKey?: string, defaultMessage?: string) => string;
export declare const getUiMessages: () => typeof uiMessages;
export declare const setUiMessages: (newMessages: typeof uiMessages) => void;
export {};
